name: Auto test todo app solution
on: push
env:
  PG_DATABASE: wd-todo-test
  PG_USER: postgres
  PG_PASSWORD: admin
jobs:
  
  run-tests:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:11.7
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: wd-todo-test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install dependencies
        run:  npm ci

      - name: Run unit tests
        run: npm test
      - name: Run the app
        id: run-app
        run: |
          npm install
          npx sequelize-cli db:drop
          npx sequelize-cli db:create
          npx sequelize-cli db:migrate
          PORT=3000 npm start &
          sleep 5

      - name: Run integration tests
        run: |
          npm install cypress cypress-json-results
          npx cypress run --env STUDENT_SUBMISSION_URL="http://localhost:3000/"

      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }} # required
          notify_when: 'failure'
          notification_title: '{workflow} has {status_message}'
          message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>'
          footer: 'Linked to Repo <{repo_url}|{repo}>'
          mention_users: 'U0160UUNH8S,U0080UUAA9N'
          mention_users_when: 'failure,warnings'
          mention_groups: 'SAZ94GDB8'
          mention_groups_when: 'failure,warnings'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}    